net/http/httptest: panic on nil body (with dynamic type)


<!--
Please answer these questions before submitting your issue. Thanks!
For questions please use one of our forums: https://github.com/golang/go/wiki/Questions
-->

### What version of Go are you using (`go version`)?

<pre>
$ go version
go1.13.12 linux/amd64
</pre>

### Does this issue reproduce with the latest release?
Yes


### What operating system and processor architecture are you using (`go env`)?

<details><summary><code>go env</code> Output</summary><br><pre>
$ go env
GO111MODULE=""
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/gl/.cache/go-build"
GOENV="/home/gl/.config/go/env"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GONOPROXY="github.com/seldonIO,github.com/glindsell,github.com/seldonio"
GONOSUMDB="github.com/seldonIO,github.com/glindsell,github.com/seldonio"
GOOS="linux"
GOPATH="/home/gl/go"
GOPRIVATE="github.com/seldonIO,github.com/glindsell,github.com/seldonio"
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GCCGO="gccgo"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD=""
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build663193819=/tmp/go-build -gno-record-gcc-switches"
</pre></details>

### What did you do?
I passed `nil` as body into the `httptest.NewRequest()` function like so:
https://play.golang.org/p/Tet9TTHBell



### What did you expect to see?
A `*http.Request` returned with a nil body.



### What did you see instead?
The following panic:
```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x55de8d]

goroutine 1 [running]:
bytes.(*Buffer).Len(...)
	/usr/local/go-faketime/src/bytes/buffer.go:73
net/http/httptest.NewRequest(0x5a9a9f, 0x3, 0x5a9ba3, 0x4, 0x5e0b80, 0x0, 0xc000096058)
	/usr/local/go-faketime/src/net/http/httptest/httptest.go:58 +0x56d
main.doSomething(...)
	/tmp/sandbox021711729/prog.go:13
main.main()
	/tmp/sandbox021711729/prog.go:9 +0x65

Program exited: status 2.
```

### Why?
I have observed the following...

This succeeds:
https://play.golang.org/p/Y0HqrX56_Xw

This panics:
https://play.golang.org/p/-WupSzxdgoI

It compiles but the nil comparison [here on line 55](https://golang.org/src/net/http/httptest/httptest.go?#L55) returns false. Which allows a nil value to drop through to [here on line 58](https://golang.org/src/net/http/httptest/httptest.go?#L58) where a panic occurs.

I believe this is because the non-interface value (RHS) on L55 implements the io.Reader interface and therefore will be implicitly converted to the type of the interface value (LHS) before making the comparison, so they can be compared.

However, the newly converted interface value (RHS) on L55 still has a dynamic type *bytes.Buffer but the conversion only works one way - the other interface value (LHS) has not been converted to *bytes.Buffer and so still has no dynamic type. When comparing interfaces Go compares their values _and_ their dynamic types; these must both be equal for == equality. In this case they are not so `nil == (*bytes.Buffer)(nil)` returns `false`.

I have tried checking for nil after performing the type check and the panic disappears: https://play.golang.org/p/NwFGnico3w7 this is my suggested fix.
